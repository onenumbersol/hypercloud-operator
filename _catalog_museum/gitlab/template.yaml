apiVersion: tmax.io/v1
kind: Template
metadata:
  name: gitlab-template
  namespace: default
  annotations:
    template-version: 1.0.2
    tested-operator-version: 4.1.0.23
shortDescription: "GitLab Deployment"
longDescription: "GitLab Deployment"
imageUrl: "https://upload.wikimedia.org/wikipedia/commons/c/c6/GitLab_logo.png"
provider: tmax
tags:
- gitlab
- git
- scm
parameters:
- name: APP_NAME
  displayName: AppName
  description: A GitLab Deployment Name
  required: true
- name: NAMESPACE
  displayName: Namespace
  description: Application namespace
  required: true
- name: STORAGE
  displayName: Storage
  description: Storage size
  required: true
- name: SERVICE_TYPE
  displayName: ServiceType
  description: Service Type (ClsuterIP/NodePort/LoadBalancer)
  required: true
- name: SSH_PORT
  displayName: SshPort
  description: SSH port for git clone/pull/push
  required: true
  value: 2221
  valueType: number
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}-service
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    type: ${SERVICE_TYPE}
    ports:
    - name: http
      port: 80
    - name: https
      port: 443
    - name: ssh
      port: ${SSH_PORT}
      targetPort: 22
    selector:
      app: ${APP_NAME}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APP_NAME}-pvc
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    storageClassName: csi-cephfs-sc
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${STORAGE}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${APP_NAME}
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    selector:
      matchLabels:
        app: ${APP_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
      spec:
        containers:
        - name: ${APP_NAME}
          image: gitlab/gitlab-ce:latest
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          - name: ssh
            containerPort: 22
          volumeMounts:
          - name: ${APP_NAME}-pv
            mountPath: /etc/gitlab
            subPath: config
          - name: ${APP_NAME}-pv
            mountPath: /var/opt/gitlab
            subPath: data
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                /opt/gitlab/bin/gitlab-healthcheck --fail --max-time 10
          lifecycle:
            postStart:
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - |
                  FILE=/etc/gitlab/gitlab.rb
                  while [ ! -f "$FILE" ]; do
                      sleep 1
                  done
                  sed -E -i "s/[# ]*(gitlab_rails\['gitlab_shell_ssh_port'\][ ]*=[ ]*).*/\1 ${SSH_PORT}/" $FILE
        volumes:
        - name: ${APP_NAME}-pv
          persistentVolumeClaim:
            claimName: ${APP_NAME}-pvc
plans:
- name: gitlab-plan1
  description: "GitLab Plan"
  metadata:
    bullets:
    - "GitLab Deployment Plan"
    costs:
      amount: 100
      unit: $
  free: false
  bindable: true
  plan_updateable: false
  schemas:
    service_instance:
      create:
        parameters:
          APP_NAME: gitlab-deploy
          NAMESPACE: default
          STORAGE: 10Gi
